VERSION 0.6

LARAVELAPP:
	COMMAND
    ARG service='sample'
    ARG env='prod'
    ARG dir="./$service/environments/$env"
    ARG file="$dir/app-template.yaml"
    ARG version=0.1
    ARG httpsDomain1=''
    ARG deploymentReplicas=1
    ARG CRD_KIND='CustomAppTemplate'
	ARG CRD_GROUP='app.resourcegroup.io'
    ARG OUTPUT="apiVersion: ${CRD_GROUP}/v1
kind: ${CRD_KIND}
metadata:
  name: ${service}
spec:
  serviceName: '${service}'
  environment: '${env}'
  deploymentReplicas: ${deploymentReplicas}
  imageVersion: '${version}'
  httpsDomain1: '${httpsDomain1}'
  letEncryptEmail: 'ayo@greep.io'
  configsToUse: 'php-default,cert-manager-http,cert-manager-http/issuer-lets-encrypt-1,redis,cron,queue-workers'
"
	RUN mkdir -p $dir
  RUN echo "$OUTPUT" > "$file"

CONFIGMAP:
	COMMAND
    ARG service='sample'
    ARG env='prod'
    ARG dirExtra="./$service/environments/$env/extras-$service"
    ARG file="$dirExtra/configmap.yaml"
    ARG DB_HOST=''
	ARG OUTPUT="apiVersion: v1
kind: ConfigMap
metadata:
  name: ${service}
  namespace: ${env}-${service}
data:
  APP_NAME: 'Greep'
  APP_ENV: 'local'
  APP_DEBUG: 'true'

  APP_URL: 'https://api-client-dev.greep.io'
  APP_STATE: '${env}'

  # Update the LOG_CHANNEL to stdout for Kubernetes
  LOG_CHANNEL: 'stdout'
  LOG_LEVEL: 'debug'
  DB_CONNECTION: 'pgsql'
  DB_HOST: '$DB_HOST'
  DB_PORT: '5432'
  DB_SSLMODE: 'require'
  BROADCAST_DRIVER: 'pusher'
  CACHE_DRIVER: 'redis'
  FILESYSTEM_DRIVER: 'local'
  QUEUE_CONNECTION: 'redis'
  DB_SSLCERT: '/opt/apps/laravel-in-kubernetes/storage/certs/${env}/ca-certificate.crt'

  # Microservice databases
  DB_AUTH_DATABASE: 'greep-${env}'
  DB_USER_DATABASE: 'greep-${env}'
  DB_NOTIFICATION_DATABASE: 'greep-${env}'
  DB_WALLET_DATABASE: 'greep-${env}'
  DB_BLOCKCHAIN_DATABASE: 'greep-${env}'

  # Microservice URL
  AUTH_API: 'http://greep-auth-webserver.${env}-greep-auth.svc.cluster.local:80'
  BLOCKCHAIN_API: 'http://greep-blockchain-webserver.${env}-greep-blockchain.svc.cluster.local:80'
  NOTIFICATION_API: 'http://greep-notification-webserver.${env}-greep-notification.svc.cluster.local:80'
  USER_API: 'http://greep-user-webserver.${env}-greep-user.svc.cluster.local:80'
  WALLET_API: 'http://greep-wallet-webserver.${env}-greep-wallet.svc.cluster.local:80'

  MEMCACHED_HOST: 'memcached'
  REDIS_HOST:  'greep-user-api-redis.${env}-greep-user-api.svc.cluster.local'
  REDIS_PORT: '6379'

  LIGHTHOUSE_CACHE_ENABLE: 'true'
  GRAPHIQL_ENABLED: 'true'
"
	RUN mkdir -p $dirExtra
  RUN echo "$OUTPUT" > "$file"

SECRETS:
	COMMAND
    ARG service='sample'
    ARG env='prod'
    ARG dirExtra="./$service/environments/$env/extras-$service"
    ARG file="$dirExtra/secrets.yaml"
    ARG AZURE_STORAGE_KEY=''
    ARG AZURE_STORAGE_NAME=''
    ARG AZURE_STORAGE_CONTAINER=''
    ARG AZURE_STORAGE_URL=''
    ARG AZURE_STORAGE_CONNECTION_STRING=''
    ARG DB_USER='user'
    ARG DB_PASSWORD='password'
    ARG APP_KEY=''
    ARG ISSUER_PUBLIC_KEY=''
    ARG USDC_ISSUER_PUBLIC_KEY=''
	ARG OUTPUT="apiVersion: v1
kind: Secret
metadata:
  name: ${service}
  namespace: ${env}-${service}
type: Opaque
stringData:
  APP_KEY: '${APP_KEY}'
  DB_USERNAME: '$DB_USER'
  DB_PASSWORD: '$DB_PASSWORD'
  REDIS_PASSWORD: "null"
  ISSUER_PUBLIC_KEY: '${ISSUER_PUBLIC_KEY}'
  USDC_ISSUER_PUBLIC_KEY: '${USDC_ISSUER_PUBLIC_KEY}'
  AZURE_STORAGE_KEY: '${AZURE_STORAGE_KEY}'
  AZURE_STORAGE_NAME:  '${AZURE_STORAGE_NAME}'
  AZURE_STORAGE_CONTAINER: '${AZURE_STORAGE_CONTAINER}'
  AZURE_STORAGE_URL: '${AZURE_STORAGE_URL}'
  AZURE_STORAGE_CONNECTION_STRING: '${AZURE_STORAGE_CONNECTION_STRING}'
"
	RUN mkdir -p $dirExtra
  RUN echo "$OUTPUT" > "$file"
